{"version":3,"file":"static/js/691.d9a152dc.chunk.js","mappings":"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","sources":["apiService/apiService.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'ab4e2d663c396eac6d409e641c27f924';\n\nasync function fetchTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n  return response.data.results;\n}\n\nasync function fetchMovieByQuery(query) {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n}\n\nasync function fetchMovieDetailes(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${KEY}&include_adult=false`\n  );\n  return response;\n}\n\nasync function fetchMovieCast(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return response.data.cast;\n}\n\nasync function fetchMovieReviews(movieId) {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return response.data.results;\n}\n\nexport {\n  fetchTrendingMovies,\n  fetchMovieByQuery,\n  fetchMovieDetailes,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const WrapperMovies = styled.div`\npadding: 10px 0`\n\nexport const Form = styled.form`\nmargin-bottom: 10px`\n\nexport const Input = styled.input`\nmargin-right: 5px`\n\nexport const Films = styled.ul`\nlist-style: none;\ndisplay: flex;\nflex-direction: column;\ngap: 7px`\n\nexport const Film = styled(Link)`\ntext-decoration: none;\ncolor: black\n`","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMovieByQuery } from 'apiService/apiService';\nimport {WrapperMovies, Form, Input, Films, Film} from './Movies.styled'\n\nexport default function Movies() {\n  const [films, setFilms] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    fetchMovieByQuery(query)\n      .then(response => setFilms([...response]))\n      .catch(error => console.log(error.message));\n  }, [query]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const searchQuery = evt.target.elements.query.value;\n    setSearchParams({ query: searchQuery });\n  };\n  \n  return (\n    <WrapperMovies>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search</button>\n      </Form>\n      <Films>\n        {films.map(({ id, title }) => (\n          <li key={id}>\n            <Film to={`${id}`} state={{ from: location }}>\n              {title}\n            </Film>\n          </li>\n        ))}\n      </Films>\n    </WrapperMovies>\n  );\n}\n"],"names":["BASE_URL","KEY","fetchTrendingMovies","axios","response","data","results","fetchMovieByQuery","query","fetchMovieDetailes","movieId","fetchMovieCast","cast","fetchMovieReviews","WrapperMovies","styled","Form","Input","Films","Film","Link","Movies","useState","films","setFilms","location","useLocation","useSearchParams","searchParams","setSearchParams","get","useEffect","then","catch","error","console","log","message","onSubmit","evt","preventDefault","searchQuery","target","elements","value","type","name","map","id","title","to","state","from"],"sourceRoot":""}